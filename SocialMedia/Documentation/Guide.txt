This document serves as a guide to the features of this project.

FEATURES

- Media: Images, Posts, Comments, Likes, Profiles/Friends.

- User
	- A user is merely the record in the Identity User plugin database.
	- It is used to get a profile.

- Profile
	- Holds public information like name, bio, profile picture.
	- Profile name is two fields: FirstName, and LastName, but is sent to client as one combined name.
	- The profile password is not really a password at all, but instead a unique link that ties the profile to a user.

- Friends
	- A friend record acts as a request and an accepted friend.
	- A relationship is a ProfileID pair (to and from).
	- A bool type field tracks whether the invitation has been accepted.
	- Friend status is attached to the profile view model and full profile view model when sent to the client.

		- Status: me
			Description: This profile is the current user's profile.
			Response: Do nothing.

		- Status: userRequested
			Description: The current user requested them.
			Response: Attach a label that says "Pending".

		- Status: friend
			Description: Either sent to or from the current user but either case was accepted.
			Response: Attach a button labeled "Remove" that sends delete request to server to remove friend.

		- Status: requestedUser
			Description: They requested the current user.
			Response: Attach a button labeled "Accept" that sends an update request to server to accept.

		- Status: unrelated
			Description: No request has been made between them and the current user.
			Response: Attach a button labeled "Add" that sends a post request to server to add make request.

- Images
	- Image files are stored in the server file system, seperate from their corresponding records in the database.
		- This is supposedly faster than storing the files in the database.
	- An image can have one profile as it's owner.
	- It can be used as a profile picture and it can be attached to posts.
	Image Card
		- These appear in the image dropdown, profile card, post card, and profile modal.
		- In most cases, left-clicking an image will open it in the fullsize image modal.
			- In other cases, it will either make it a profile picture, or attach it to a post.

- Posts
	- One owner
	- One image and/or a caption
	- Datetime of post
	- Caption is editable
	- XXX Make: indication that the user has commented on a post
		- XXX When indicator is clicked on start at 1/# and give left and right buttons that jump to the users next comment.

PATTERNS

- tag property
	- tag property is found in cards, modals, dropdowns, and component base classes
	- it is the root elm that contains all html elm in those classes
	- there are more suitable names
	- It is an HTML elm
	- What are classes called that wrap functionality around an HTML elm?

- Lazy Loading
	- For most tables, there is a shortcut method in the repository class for selecting a range.
		- The post table is an exception. There is a distinction between public post feed and profile post feed so the method for
		selecting a range of posts is held in the post controller instead of the post repo.

- Cards
	- Most if not all records are wrapped in a card when they return from the host in a response. XXX
		- This process happens in Repo.js
	- Common methods (even if the arguments are different)
		- constructor()
		- static list(records)
		- static copy(record)
		- remove
	- Common properties
		- tag
		- record (refered to as comment, post, etc in each class)
		- static cards (refered to as commentCards, postCards etc)

- Modals
	- Float in the center of the screen.
	- Layer on top of eachother.
		- Must close from the top, one at a time.
	- Modal base class holds shared functionality.
	- When any modal except the context menu is open, page scrolling is locked.
		

- Dropdowns (FriendDropdown, ImageDropdown)
	- Occupy left side of screen.
	- Only one can be open at a time.
	- Good for searching.
		- Wether searching by scrolling or typing, the results are compact.
		- XXX Why not load compact posts in dropdown so they can be searched? XXX
			- Post, Comment, Like, Friend, and Image should have compact card versions for dropdowns (and be searchable).
				- Each should also have modal

				Make Modal and Dropdown stream all content and have method overrides so custom logic can be injected?
				Have one modal container that adapts. XXX no, multiple modals allows going back like if you fullzise someones pictures XXX
				Have one dropdown container that adapts.
				Have one card container with services for waiting for an image to not collapse, static/dynamic rules.
					In JS, clone frame, then clone default post card(or whatever) and append to frame.
						Why not just copy paste the frame and rename the id attributes in HTML?
							Because, the shared HTML plus the shared JS logic would be compact and ease expansion. 
								Every card would have a content type property name that would get added to className (ex. dropdown{post})
						
	XXX

	Suffix for any class with a tag property: ObjElm, AdvElm, Elm
	Or instead just have them inherit the IAdvElm properties

	Modal.load(AdvElm)
	Dropdown.load(AdvElms)
		- switches to the stream of the new media
	new {Type}Card(record)

	Content Stream (a standard system for lazy loading, at least for requests) XXX ContentBox does this


	- Cards
		- Singular (belong to other cards)
			- LikesCard	  (post, comment)
			- ProfileCard (CommentCard, PostCard)
			- Image	(image box in ProfileModal and ProfileCard)
		- Plural (belong to a content box)
			- CommentCard (content box in PostCard)
			- PostCard    (post box in    PublicPosts  and ProfileModal)
			- ImageCard   (images box in  ProfileModal and ImageDropdown)
			- ProfileCard (content box in ProfileModal and FriendDropdown)

	- Compact Versions of Cards
		- CompactPostCard
			Thumbnail of the attached image, small caption, number of likes, whether they liked it, the owner.
		- Images (thumbnails)

	- Modals (One of a kinds)
		Provide each modal with modalCon XXX how? XXX
		- HelpModal
		- ContextModal
		- ConfirmModal
		- ProfileModal
		- UploadImageModal
		- CreatePostModal
		- ImageModal
		- PostModal
			If a comment is pulled up in a modal from a search, the whole post will be in the modal, and the comment will be scrolled to.

	- Dropdowns (For list of small cards and compact versions of cards)
		- CompactPostCard
			- Search option to only include posts that the user has liked
		- ImageCard
		- FriendDropdown (change to ProfileDropdown)
		- CommentDropdown
			- Search for comments
			- These comment cards have the title of the post they belong to in it

	/XXX


- Sudo-iterative JS objs (ContentBox.contentBoxes)
- Sudo-inheritance in JS objs (Dropdown.dropdowns, Modal.modals, (cards?), ContentBox.contentBoxes)